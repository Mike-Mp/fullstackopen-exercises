"use strict";function _toConsumableArray(t){return _arrayWithoutHoles(t)||_iterableToArray(t)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance")}function _iterableToArray(t){if(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t))return Array.from(t)}function _arrayWithoutHoles(t){if(Array.isArray(t)){for(var n=0,e=new Array(t.length);n<t.length;n++)e[n]=t[n];return e}}var express=require("express"),app=express();app.use(express.json());var notes=[{id:1,content:"HTML is easy",date:"2019-05-30T17:30:31.098Z",important:!0},{id:2,content:"Browser can execute only Javascript",date:"2019-05-30T18:39:34.091Z",important:!1},{id:3,content:"GET and POST are the most important methods of HTTP protocol",date:"2019-05-30T19:20:14.298Z",important:!0}];app.get("/",function(t,n){n.send("<h1>Hello world!</h1>")}),app.get("/api/notes",function(t,n){n.json(notes)}),app.get("/api/notes/:id",function(t,n){var e=Number(t.params.id),r=notes.find(function(t){return t.id===e});r?n.json(r):n.status(404).end()}),app.post("/api/notes",function(t,n){var e=0<notes.length?Math.max.apply(Math,_toConsumableArray(notes.map(function(t){return t.id}))):0,r=t.body;r.content||n.status(400).json({error:"content missing"});var o={content:r.content,important:r.important||!1,date:new Date,id:e+1};notes=notes.concat(o),n.json(o)}),app.delete("/api/notes/:id",function(t,n){var e=Number(t.params.id);notes=notes.filter(function(t){return t.id!==e}),n.status(204).end()});var PORT=3001;app.listen(PORT,function(){console.log("Server running on port ".concat(PORT))});