{"version":3,"sources":["components/Note.js","services/notes.js","components/Notification.js","components/Footer.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","request","axios","get","nonExisting","id","date","then","res","data","concat","newObject","post","changedObject","put","Notification","message","Footer","style","color","fontStyle","fontSize","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","notesToShow","filter","map","key","find","n","changedNote","catch","error","setTimeout","onSubmit","e","preventDefault","noteObject","Date","toISOString","Math","random","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"0NAaeA,EAXF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UAAY,qBAAuB,iBAEtD,OACE,wBAAIC,UAAU,QACXJ,EAAKK,QACN,4BAAQC,QAASL,GAAmBC,K,gBCgB3B,EArBA,WACb,IAAMK,EAAUC,IAAMC,IAHR,cAIRC,EAAc,CAClBC,GAAI,IACJN,QAAS,8BACTO,KAAM,2BACNT,WAAW,GAEb,OAAOI,EAAQM,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAKC,OAAON,OAahC,EAVA,SAACO,GAEd,OADgBT,IAAMU,KAdR,aAcsBD,GACrBJ,MAAK,SAACC,GAAD,OAASA,EAAIC,SAQpB,EALA,SAACJ,EAAIQ,GAElB,OADgBX,IAAMY,IAAN,UAnBF,aAmBE,YAAwBT,GAAMQ,GAC/BN,MAAK,SAACC,GAAD,OAASA,EAAIC,SCXpBM,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EACK,KAGF,yBAAKlB,UAAU,SAASkB,ICYlBC,EAjBA,WAOb,OACE,yBAAKC,MAPa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,KAKR,6BACA,wGCyESC,EA/EH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEcF,mBAAS,iBAFvB,mBAETG,EAFS,KAEAC,EAFA,OAGcJ,oBAAS,GAHvB,mBAGTK,EAHS,KAGAC,EAHA,OAIwBN,mBAAS,0BAJjC,mBAITO,EAJS,KAIKC,EAJL,KAMhBC,qBAAU,WACRC,IAAqB1B,MAAK,SAACC,GAAD,OAASiB,EAASjB,QAC3C,IAEH,IAsCM0B,EAAcN,EAChBJ,EACAA,EAAMW,QAAO,SAACzC,GAAD,OAA6B,IAAnBA,EAAKG,aAEhC,OACE,6BACE,qCACA,kBAAC,EAAD,CAAcmB,QAASc,IACvB,6BACE,4BAAQ9B,QAAS,kBAAM6B,GAAYD,KAAnC,QACQA,EAAU,YAAc,QAGlC,4BACGM,EAAYE,KAAI,SAAC1C,GAAD,OACf,kBAAC,EAAD,CACE2C,IAAK3C,EAAKW,GACVX,KAAMA,EACNC,iBAAkB,kBAtCH,SAACU,GACxB,IAAMX,EAAO8B,EAAMc,MAAK,SAACC,GAAD,OAAOA,EAAElC,KAAOA,KAClCmC,EAAW,2BAAQ9C,GAAR,IAAcG,WAAYH,EAAKG,YAEhDoC,EACU5B,EAAImC,GACXjC,MAAK,SAACC,GACLiB,EAASD,EAAMY,KAAI,SAACG,GAAD,OAAQA,EAAElC,KAAOA,EAAKG,EAAM+B,SAEhDE,OAAM,SAACC,GACNX,EAAgB,SAAD,OACJrC,EAAKK,QADD,uCAGf4C,YAAW,WACTZ,EAAgB,QACf,KACHN,EAASD,EAAMW,QAAO,SAACI,GAAD,OAAOA,EAAElC,KAAOA,SAsBVV,CAAiBD,EAAKW,WAIpD,0BAAMuC,SA5DM,SAACC,GACfA,EAAEC,iBACF,IAAMC,EAAa,CACjBhD,QAAS2B,EACTpB,MAAM,IAAI0C,MAAOC,cACjBpD,UAAWqD,KAAKC,SAAW,IAG7BlB,EAAmBc,GAAYxC,MAAK,SAACC,GACnCiB,EAASD,EAAMd,OAAOF,IACtBmB,EAAW,SAmDT,2BAAOyB,MAAO1B,EAAS2B,SA/CJ,SAACR,GACxBlB,EAAWkB,EAAES,OAAOF,UA+ChB,4BAAQG,KAAK,UAAb,SAEF,kBAAC,EAAD,QC3ENC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.07a5e99a.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important ? \"make not important\" : \"make important\";\n\n  return (\n    <li className=\"note\">\n      {note.content}\n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  );\n};\n\nexport default Note;\n","import axios from \"axios\";\nconst baseUrl = \"/api/notes\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  const nonExisting = {\n    id: 10000,\n    content: \"This is not saved to server\",\n    date: \"2019-05-30T17L30L31.098Z\",\n    important: true,\n  };\n  return request.then((res) => res.data.concat(nonExisting));\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((res) => res.data);\n};\n\nconst update = (id, changedObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, changedObject);\n  return request.then((res) => res.data);\n};\n\nexport default {\n  getAll,\n  create,\n  update,\n};\n","import React from \"react\";\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null;\n  }\n\n  return <div className=\"error\">{message}</div>;\n};\n\nexport default Notification;\n","import React from \"react\";\n\nconst Footer = () => {\n  const footerStyle = {\n    color: \"green\",\n    fontStyle: \"italic\",\n    fontSize: 16,\n  };\n\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>\n        Note app, Department of Computer Science, University of Helsinksi 2020\n      </em>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React, { useState, useEffect } from \"react\";\nimport Note from \"./components/Note\";\nimport noteService from \"./services/notes\";\nimport Notification from \"./components/Notification\";\nimport Footer from \"./components/Footer\";\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState(\"a new note...\");\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(\"some error happened...\");\n\n  useEffect(() => {\n    noteService.getAll().then((res) => setNotes(res));\n  }, []);\n\n  const addNote = (e) => {\n    e.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n    };\n\n    noteService.create(noteObject).then((res) => {\n      setNotes(notes.concat(res));\n      setNewNote(\"\");\n    });\n  };\n\n  const handleNoteChange = (e) => {\n    setNewNote(e.target.value);\n  };\n\n  const toggleImportance = (id) => {\n    const note = notes.find((n) => n.id === id);\n    const changedNote = { ...note, important: !note.important };\n\n    noteService\n      .update(id, changedNote)\n      .then((res) => {\n        setNotes(notes.map((n) => (n.id === id ? res : n)));\n      })\n      .catch((error) => {\n        setErrorMessage(\n          `Note '${note.content}' was already removed from server.`\n        );\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 5000);\n        setNotes(notes.filter((n) => n.id !== id));\n      });\n  };\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter((note) => note.important === true);\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? \"important\" : \"all\"}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map((note) => (\n          <Note\n            key={note.id}\n            note={note}\n            toggleImportance={() => toggleImportance(note.id)}\n          />\n        ))}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange} />\n        <button type=\"submit\">save</button>\n      </form>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}