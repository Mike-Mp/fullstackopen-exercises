{"version":3,"sources":["components/Note.js","services/notes.js","services/login.js","components/Notification.js","components/Footer.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","token","getAll","request","axios","get","nonExisting","id","date","then","res","data","concat","create","newObject","a","config","headers","Authorization","post","response","update","changedObject","put","setToken","newToken","login","credentials","Notification","message","Footer","style","color","fontStyle","fontSize","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","username","setUsername","password","setPassword","user","setUser","useEffect","noteService","loggedUserJSON","window","localStorage","getItem","JSON","parse","addNote","e","preventDefault","noteObject","Date","toISOString","Math","random","handleNoteChange","target","value","handleLogin","loginService","setItem","stringify","setTimeout","notesToShow","filter","onSubmit","type","name","onChange","map","key","find","n","changedNote","catch","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.42f72c14.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important ? \"make not important\" : \"make important\";\n\n  return (\n    <li className=\"note\">\n      {note.content}\n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  );\n};\n\nexport default Note;\n","import axios from \"axios\";\nconst baseUrl = \"/api/notes\";\n\nlet token = null;\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`;\n};\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  const nonExisting = {\n    id: 10000,\n    content: \"This is not saved to server\",\n    date: \"2019-05-30T17L30L31.098Z\",\n    important: true,\n  };\n  return request.then((res) => res.data.concat(nonExisting));\n};\n\nconst create = async (newObject) => {\n  const config = {\n    headers: { Authorization: token },\n  };\n  const response = await axios.post(baseUrl, newObject, config);\n  return response.data;\n};\n\nconst update = (id, changedObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, changedObject);\n  return request.then((res) => res.data);\n};\n\nexport default {\n  getAll,\n  create,\n  update,\n  setToken,\n};\n","import axios from \"axios\";\nconst baseUrl = \"/api/login\";\n\nconst login = async (credentials) => {\n  const response = await axios.post(baseUrl, credentials);\n  return response.data;\n};\n\nexport default { login };\n","import React from \"react\";\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null;\n  }\n\n  return <div className=\"error\">{message}</div>;\n};\n\nexport default Notification;\n","import React from \"react\";\n\nconst Footer = () => {\n  const footerStyle = {\n    color: \"green\",\n    fontStyle: \"italic\",\n    fontSize: 16,\n  };\n\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>\n        Note app, Department of Computer Science, University of Helsinksi 2020\n      </em>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React, { useState, useEffect } from \"react\";\nimport Note from \"./components/Note\";\nimport noteService from \"./services/notes\";\nimport loginService from \"./services/login\";\nimport Notification from \"./components/Notification\";\nimport Footer from \"./components/Footer\";\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState(\"a new note...\");\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(\"some error happened...\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    noteService.getAll().then((res) => setNotes(res));\n  }, []);\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem(\"loggedNoteappUser\");\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      noteService.setToken(user.token);\n    }\n  }, []);\n\n  const addNote = (e) => {\n    e.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n    };\n\n    noteService.create(noteObject).then((res) => {\n      setNotes(notes.concat(res));\n      setNewNote(\"\");\n    });\n  };\n\n  const handleNoteChange = (e) => {\n    setNewNote(e.target.value);\n  };\n\n  const toggleImportance = (id) => {\n    const note = notes.find((n) => n.id === id);\n    const changedNote = { ...note, important: !note.important };\n\n    noteService\n      .update(id, changedNote)\n      .then((res) => {\n        setNotes(notes.map((n) => (n.id === id ? res : n)));\n      })\n      .catch((error) => {\n        setErrorMessage(\n          `Note '${note.content}' was already removed from server.`\n        );\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 5000);\n        setNotes(notes.filter((n) => n.id !== id));\n      });\n  };\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    try {\n      const user = await loginService.login({\n        username,\n        password,\n      });\n\n      window.localStorage.setItem(\"loggedNoteappUser\", JSON.stringify(user));\n      noteService.setToken(user.token);\n      setUser(user);\n      setUsername(\"\");\n      setPassword(\"\");\n    } catch (exception) {\n      setErrorMessage(\"Wrong credentials\");\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 6000);\n    }\n  };\n\n  const loginForm = () => (\n    <form onSubmit={handleLogin}>\n      <div>\n        username\n        <input\n          type=\"text\"\n          value={username}\n          name=\"Username\"\n          onChange={({ target }) => setUsername(target.value)}\n        />\n      </div>\n      <div>\n        password\n        <input\n          type=\"password\"\n          value={password}\n          name=\"Password\"\n          onChange={({ target }) => setPassword(target.value)}\n        />\n      </div>\n      <button type=\"submit\">Login</button>\n    </form>\n  );\n\n  const noteForm = () => (\n    <form onSubmit={addNote}>\n      <input value={newNote} onChange={handleNoteChange} />\n      <button type=\"submit\">save</button>\n    </form>\n  );\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter((note) => note.important === true);\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n\n      {user === null ? (\n        loginForm()\n      ) : (\n        <div>\n          <p>{user.name} logged in</p>\n          {noteForm()}\n        </div>\n      )}\n\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? \"important\" : \"all\"}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map((note) => (\n          <Note\n            key={note.id}\n            note={note}\n            toggleImportance={() => toggleImportance(note.id)}\n          />\n        ))}\n      </ul>\n\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}